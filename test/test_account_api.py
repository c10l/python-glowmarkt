# coding: utf-8

"""
Glowmarkt User System

The document enlists and describes the APIs for the User.  # noqa: E501

OpenAPI spec version: 1.0.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import python_glowmarkt
from python_glowmarkt.api.account_api import AccountApi  # noqa: E501
from python_glowmarkt.rest import ApiException


class TestAccountApi(unittest.TestCase):
    """AccountApi unit test stubs"""

    def setUp(self):
        self.api = AccountApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_account_account_id_mobileapptoken_post(self):
        """Test case for account_account_id_mobileapptoken_post

        Add mobile app token to a user  # noqa: E501
        """
        pass

    def test_account_account_id_mobileapptoken_put(self):
        """Test case for account_account_id_mobileapptoken_put

        Remove a mobile app token to a user  # noqa: E501
        """
        pass

    def test_add_account(self):
        """Test case for add_account

        Add an account to an existing user  # noqa: E501
        """
        pass

    def test_delete_account(self):
        """Test case for delete_account

        Delete account  # noqa: E501
        """
        pass

    def test_get_account_statusby_id(self):
        """Test case for get_account_statusby_id

        Find the status of a specified account. If the account is using an external directory service, this call will confirm whether the user is authenticated against it. This call requires administrative application level credentials.  # noqa: E501
        """
        pass

    def test_get_account_statusby_user_token(self):
        """Test case for get_account_statusby_user_token

        With a given JWT token a user can have their account status verfied. If their account is created under an external directory service, this call will establish whether a user's token to the external service is still valid.  # noqa: E501
        """
        pass

    def test_get_accountby_id(self):
        """Test case for get_accountby_id

        Find specific account of an application.  # noqa: E501
        """
        pass

    def test_get_accounts(self):
        """Test case for get_accounts

        Find all accounts of an application  # noqa: E501
        """
        pass

    def test_update_account(self):
        """Test case for update_account

        Updates the account's metadata.  # noqa: E501
        """
        pass

    def test_user_change_email(self):
        """Test case for user_change_email

        Change a user's email  # noqa: E501
        """
        pass

    def test_user_change_name(self):
        """Test case for user_change_name

        Change a user's name  # noqa: E501
        """
        pass

    def test_user_change_pass_word(self):
        """Test case for user_change_pass_word

        Change a user's password  # noqa: E501
        """
        pass


if __name__ == "__main__":
    unittest.main()
